name: MLflow CI - Retrain Model

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  retrain:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12.6
        uses: actions/setup-python@v3
        with:
          python-version: 3.12.6

      - name: Update Conda
        run: |
          conda update -n base -c defaults conda --yes
          conda --version

      - name: Conda Init
        shell: bash
        run: |
          conda init bash && source ~/.bashrc

      - name: Clear Conda Cache
        run: conda clean --all --yes

      - name: Set Conda Channel Priority
        run: conda config --set channel_priority strict

      - name: Install dependencies
        run: |
          cd MLProject 
          conda env create -f conda.yaml
          conda run -n mlflowproject_env pip install -r requirements.txt
          conda run -n mlflowproject_env pip install mlflow

      - name: Run MLflow project and extract run_id
        id: mlflow-run
        run: |
          cd MLProject

          # Ensure conda is initialized for the current shell
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate mlflowproject_env

          echo "Running MLflow project..."
          # Redirect both stdout and stderr to output.txt
          mlflow run . --env-manager=local --experiment-name Course-Recommendation -P some-param=value > output.txt 2>&1

          echo "Extracting run_id from logs..."
          # The regex for grep is correct, but ensure it's robust
          RUN_ID=$(grep -oP "(?<=Run \(ID ')[a-f0-9]+(?='\))" output.txt)
          if [ -z "$RUN_ID" ]; then
            echo "Error: Run ID not found in logs. Check output.txt for details."
            cat output.txt # Print the content of output.txt for debugging
            exit 1
          fi
          echo "Run ID: $RUN_ID"
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

        env:
          MLFLOW_TRACKING_URI: file:./mlruns

      - name: Upload Model as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-model
          path: MLProject/models/

      - name: Commit and push if changed
        run: |
          git config --global user.email "margaretalolalilullita@gmail.com"
          git config --global user.name "margaretalola"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          git add .
          git diff-index --quiet HEAD || git commit -m "Retrained model (CI)"
          git push origin main

      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.DOCKERHUB_PAT }}" | docker login -u margaretalola --password-stdin
          cd MLProject

          echo "Listing contents of MLProject before MLflow build-docker:"
          ls -F .
          echo "Checking type of ./mlruns:"
          file ./mlruns || true # Use || true to prevent job failure if file doesn't exist

          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda activate mlflowproject_env

          echo "Building Docker image with MLflow..."
          conda run -n mlflowproject_env mlflow models build-docker -m runs:/${{ steps.mlflow-run.outputs.run_id }}/model -n margaretalola/course-recommendation-model:latest

          echo "Pushing Docker Image..."
          docker push margaretalola/course-recommendation-model:latest
        env:
          DOCKER_USERNAME: margaretalola
          MLFLOW_TRACKING_URI: file:./MLProject/mlruns
